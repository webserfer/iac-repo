  accept  hosts                    = :

  warn    set acl_m_mime_pts       = 0
          set acl_m_mime_max       = 20
          log_message              = def: mime_pts=[$acl_m_mime_pts] mime_max=[$acl_m_mime_max]
		  
  warn    condition                = ${if match {${lc:$mime_filename}} {\N(\.vbs|\.bat)$\N}}
          set acl_m_mime_pts       = ${eval:$acl_m_mime_pts+10}
          message                  = blacklisted file extension
          log_message              = set: mime_pts=[$acl_m_mime_pts] blacklisted file extension
		  
  warn    condition                = ${if >{$mime_anomaly_level}{1}}
          decode                   = default
          set acl_m_mime_pts       = ${eval:$acl_m_mime_pts+1}
          message                  = this message contains a MIME error ($mime_anomaly_text)
          log_message              = set: mime_pts=[$acl_m_mime_pts] MIME error ($mime_anomaly_text)

  warn    condition                = ${if match{$mime_boundary}{\N( |\t)$\N}}
          set acl_m_mime_pts       = ${eval:$acl_m_mime_pts+5}
          message                  = MIME boundary delimiter ends with whitespace
          log_message              = set: mime_pts=[$acl_m_mime_pts] MIME boundary delimiter ends with whitespace

  warn    condition                = ${if >{${strlen:$mime_boundary}}{70}}
          set acl_m_mime_pts       = ${eval:$acl_m_mime_pts+5}
          message                  = too long MIME boundary delimiter
          log_message              = set: mime_pts=[$acl_m_mime_pts] Too long MIME boundary delimiter

  accept authenticated             = *

  deny    condition                = ${if >={$acl_m_mime_pts}{$acl_m_mime_max}{yes}{no}}
          log_message              = mime_pts=[$acl_m_mime_pts/$acl_m_mime_max]
		  
  warn    condition                = ${if >{$acl_m_mime_pts}{0}{yes}{no}}
          set acl_c_score          = ${eval:$acl_c_score+$acl_m_mime_pts}

  accept
