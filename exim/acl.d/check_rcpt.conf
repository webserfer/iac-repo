  accept  hosts                    = :
          control                  = dkim_disable_verify

  accept  domains                  = +local_domains : +relay_to_domains
  
  deny    domains                  = +local_domains
          local_parts              = ^[.] : ^.*[@%!/|]
          message                  = restricted characters in address
          log_message              = restricted characters in address ($local_part)

  deny    domains                  = !+local_domains
          local_parts              = ^[./|] : ^.*[@%!] : ^.*/\\.\\./
          message                  = restricted characters in address
          log_message              = restricted characters in address ($local_part)

  deny    local_parts              = noreply
          message                  = restricted inbound emails

  deny    condition                = ${if match{$interface_address}{$local_part@.*}}
          hosts                    = !+relay_from_hosts : *
          message                  = nice hosts dont use my IP
          log_message              = my IP in local_part
		  
  accept  hosts                    = +relay_from_hosts
          control                  = submission
          control                  = dkim_disable_verify
 
  accept  authenticated            = *
          control                  = submission
          control                  = dkim_disable_verify

  warn    set acl_m_rcpt_pts       = 0
          set acl_m_rcpt_max       = 10
          log_message              = def: rcpt_pts=[$acl_m_rcpt_pts] rcpt_max=[$acl_m_rcpt_max]

  warn    dnslists                 = dnsbl.sorbs.net:sbl.spamhaus.org:bl.spamcop.net:cbl.abuseat.org
          hosts                    = !+relay_from_hosts : *
          set acl_m_rcpt_pts       = ${eval:$acl_m_rcpt_pts+10}
          message                  = nice hosts do not fall into blacklists 
          add_header               = X-Warning: $sender_host_address is in a black list at $dnslist_domain
          log_message              = set: rcpt_pts=[$acl_m_rcpt_pts] found in $dnslist_domain		  

  warn    !verify                  = reverse_host_lookup
          set acl_m_rcpt_pts       = ${eval:$acl_m_rcpt_pts+10}
          message                  = reverse DNS lookup failed for host $sender_host_address
          log_message              = set: rcpt_pts=[$acl_m_rcpt_pts] reverse DNS lookup failed

  warn    condition                = ${if !eq{$sender_helo_name}{$sender_host_name}{yes}{no}}
          hosts                    = !+relay_from_hosts : *
          set acl_m_rcpt_pts       = ${eval:$acl_m_rcpt_pts+5}
          message                  = nice hosts have reverse dns zone matches with HELO
          log_message              = set: rcpt_pts=[$acl_m_rcpt_pts] reverse zone not match with HELO

  warn    condition                = ${if eq{$host_lookup_failed}{1}{yes}{no}}
          hosts                    = !+relay_from_hosts : *
          set acl_m_rcpt_pts       = ${eval:$acl_m_rcpt_pts+5}
          message                  = nice hosts have reverse dns zone
          log_message              = set: rcpt_pts=[$acl_m_rcpt_pts] no reverse zone for host

  warn    condition                = ${if eq {$sender_host_dnssec}{yes}{yes}{no}}
          hosts                    = !+relay_from_hosts : *
          set acl_m_rcpt_pts       = ${eval:$acl_m_rcpt_pts+1}
          message                  = nice hosts have DNSSEC signature
          log_message              = set: rcpt_pts=[$acl_m_rcpt_pts] host does not have DNSSEC

  warn    condition                = ${if <{$sender_host_port}{1024}{yes}{no}}
          hosts                    = !+relay_from_hosts : *
          set acl_m_rcpt_pts       = ${eval:$acl_m_rcpt_pts+1}
          message                  = nice hosts using high ports for outcoming connections
          log_message              = set: rcpt_pts=[$acl_m_rcpt_pts] using low port [$sender_host_port]

  warn    condition                = ${if match{$sender_host_name}{\N((?>\w+[\.]){4,})\N}{yes}{no}}
          hosts                    = !+relay_from_hosts : *
          set acl_m_rcpt_pts       = ${eval:$acl_m_rcpt_pts+3}
          log_message              = set: rcpt_pts=[$acl_m_rcpt_pts] too many dots in hostname

  warn    condition                = ${if >{${strlen:$local_part}}{30}{yes}{no}}
          hosts                    = !+relay_from_hosts : *
          set acl_m_rcpt_pts       = ${eval:$acl_m_rcpt_pts+3}
          message                  = nice hosts have small usernames
          log_message              = set: rcpt_pts=[$acl_m_rcpt_pts] too big username length [${strlen:$local_part}]

  warn    condition                = ${if >{${strlen:$sender_address_domain}}{30}{yes}{no}}
          hosts                    = !+relay_from_hosts : *
          set acl_m_rcpt_pts       = ${eval:$acl_m_rcpt_pts+3}
          message                  = nice hosts have small domain
          log_message              = set: rcpt_pts=[$acl_m_rcpt_pts] too big hostname length [${strlen:$sender_address_domain}]

  deny    !verify                  = recipient/callout=20s,defer_ok
          message                  = unknown user
          log_message              = recipient is an unknown user

  deny    condition                = ${if >{$acl_m_rcpt_pts}{$acl_m_rcpt_max}{yes}{no}}
          log_message              = rcpt_pts=[$acl_m_rcpt_pts/$acl_m_rcpt_max] \
                                     name=[$sender_host_name] addr=[$sender_host_address] HELO=[$sender_helo_name] domain=[$sender_address_domain]

  deny    !verify                  = sender/callout
          message                  = [$sender_address] does not appear to be a valid sender address
          log_message              = [$sender_address] does not appear to be a valid sender address

  warn    condition                = ${if >{$acl_m_rcpt_pts}{0}{yes}{no}}
          set acl_c_score          = ${eval:$acl_c_score+$acl_m_rcpt_pts}
          log_message              = set CHECK: acl_c_score=[$acl_c_score] (X-ACL-Spam-Score)

  accept  condition                = ${if >{$acl_c_score}{0}{yes}{no}}
          add_header               = X-ACL-Spam-Score: $acl_c_score

  accept
